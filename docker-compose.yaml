# Milvus Standalone with GPU support (Docker)
# See: https://milvus.io/docs/prerequisite-gpu.md
# Run: docker compose up -d
# Connect with pymilvus using uri="localhost:19530"
# http://localhost:9091/webui/

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      # Automatically compact etcd history based on revision count
      - ETCD_AUTO_COMPACTION_MODE=revision
      # Keep last 1000 revisions to prevent unlimited storage growth
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      # Set etcd database size limit to 4GB for large vector collections
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      # Trigger snapshot creation every 50K operations for durability
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - .etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    environment:
      # Default MinIO credentials for object storage (change in production)
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - .minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    # https://hub.docker.com/r/milvusdb/milvus, docker pull milvusdb/milvus:v2.6.4-gpu
    image: milvusdb/milvus:v2.6.4-gpu
    container_name: milvus-264-gpu
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      # Connection endpoints for etcd metadata store
      ETCD_ENDPOINTS: etcd:2379
      # MinIO object storage address for vector data and logs
      MINIO_ADDRESS: minio:9000
      # Message queue type for internal communication
      MQ_TYPE: woodpecker
      # Timezone for logging and timestamps
      TZ: Europe/Helsinki
      # Log verbosity level (debug, info, warn, error)
      MILVUS_LOG_LEVEL: info
      # Enable GPU acceleration for vector operations
      MILVUS_GPU_ENABLED: true
      # GPU resource configuration (default uses all available)
      MILVUS_GPU_RESOURCE: default
      # Specific GPU device IDs to use (0 = first GPU)
      MILVUS_GPU_DEVICE_IDS: 0
    restart: unless-stopped
    ports:
      - "19530:19530"
      - "9091:9091" # http://localhost:9091/webui/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    volumes:
      - ./.database:/var/lib/milvus
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - "etcd"
      - "minio"
